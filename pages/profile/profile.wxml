<!--pages/profile/profile.wxml-->
<!-- template语法：模板中包裹的内容，在没有使用前，是不会渲染的 -->
<!-- 用name属性给template标签命名，然后用is调用 -->
<!-- 1. 里面的内容可以写死，调用的时候可以直接写一个单标签 -->
<template name="temp1">
  <button size="mini">按钮</button>
  <view>啊哈哈哈哈</view>
</template>

<template is="temp1" />

<!-- 2. 可以用mustache语法占位 -->
<template name="temp2">
  <button size="mini">{{ btnText }}</button>
  <view>{{ content }}</view>
</template>

<!-- 调用的时候，使用键值对的方式 -->
<template is="temp2" data="{{ btnText: '警告', content: '和额呵呵呵呵' }}" />
<template is="temp2" data="{{ btnText: '提交', content: '黑恶黑' }}" />

<template name="odd">
  <view>odd</view>
</template>
<template name="even">
  <view>even</view>
</template>

<block wx:for="{{5}}" wx:key="index">
  <template is="{{ item % 2 == 0 ? 'even' : 'odd' }}" />
</block>


<!-- 3. 将模板内容单独抽调出去，使用的时候外部引入，通过import或者include -->
<import src="../wxml/template.wxml" />
<template is="temp3" data="{{ btnCon: '我是引用的', viewCon: '我也是引用的' }}" />

<!-- 4. import 有作用域的概念，即只会 import 目标文件中定义的 template，而不会 import 目标文件 import 的 template。 -->
<import src="../wxml/a.wxml"/>
<template is="a"></template>
<!-- 因为 b 模板中已经引入了 a 模板,所以在这里不能再引入了,不能套娃 -->
<import src="../wxml/b.wxml"/>
<template is="b"></template>

<view>-------------include---------------</view>
<!-- 5. include 可以将目标文件除了 <template/> <wxs/> 外的整个代码引入，相当于是拷贝到 include 位置-->
<!-- include 引用的文件里可以套娃,甚至引用的文件里面可以使用import引入的template模板 -->
<include src="../wxml/header.wxml"/>
<include src="../wxml/footer.wxml"/>
